services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pupwalks}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pupwalks}
      POSTGRES_DB: ${POSTGRES_DB:-pupwalks}
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pupwalks} -d ${POSTGRES_DB:-pupwalks}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-supersecretjwt}
      POSTGRES_USER: ${POSTGRES_USER:-pupwalks}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pupwalks}
      POSTGRES_DB: ${POSTGRES_DB:-pupwalks}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    ports:
      - "4000:4000"
    volumes:
      - uploads:/app/uploads

  frontend:
    build:
      context: ./frontend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:4000}
      VITE_PUBLIC_HOST: ${VITE_PUBLIC_HOST:-}
      VITE_PUBLIC_HTTPS: ${VITE_PUBLIC_HTTPS:-false}
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  dbdata:
  uploads:
